---

- name: Ensure directory for dump exists
  file:
    path: "{{ nfdump_dumproot }}/profiles-data/{{ item.profile | default(nfsen_default_profile) }}/{{ item.name }}"
    state: directory
    owner: root
    group: root
    recurse: true

- name: Create nfdump service
  vars:
    port: "{{ item.port }}"
    profile: "{{ item.profile | default(nfsen_default_profile) }}"
    bin: "{{ nfdump_bins }}/nfcapd"
    buffer_size: "{{ item.buffer_size | default(200000) }}"
  template:
    src: service/nfdump.service.j2
    dest: "/lib/systemd/system/nfdump@{{ item.name }}.service"
    owner: root
    group: root
    mode: 0644

- name: "Restart nfdump.{{ item.name }}"
  ansible.builtin.service:
    name: "nfdump@{{ item.name }}"
    daemon_reload: true
    state: restarted

- name: Start on boot
  ansible.builtin.service:
    enabled: true
    name: "nfdump@{{ item.name }}"

- name: Creates a cron file /etc/cron.d/nfexpire
  ansible.builtin.cron:
    name: "nfexpire {{ item.name }}"
    weekday: "*"
    minute: "00"
    hour: "*"
    user: root
    job: "{{ nfdump_bins }}/nfexpire -e {{ nfdump_dumproot }}/profiles-data/{{ item.name}} -t {{ nfdump_expire_lifetime }} -s {{ nfdump_expire_maxsize }}"
    cron_file: ansible_yum-autoupdate
